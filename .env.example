# Deployment via ledger
MNEMONIC_INDEX=
LEDGER_SENDER=

# Deployment via private key
PRIVATE_KEY=

# Test rpc_endpoints
# To generate RPCs based on you api keys, you can use
# export ALCHEMY_API_KEY=yourAlchemyKey && npx @bgd-labs/rpc-env
RPC_MAINNET=
RPC_AVALANCHE=
RPC_OPTIMISM=
RPC_POLYGON=
RPC_ARBITRUM=
RPC_FANTOM=
RPC_HARMONY=
RPC_METIS=
RPC_BASE=
RPC_ZKEVM=
RPC_GNOSIS=
RPC_BNB=
RPC_SCROLL=
RPC_ZKSYNC=

# Etherscan api keys for verification & download utils
# Dedicated api keys for each chain are required when using foundry verification
ETHERSCAN_API_KEY_MAINNET=
ETHERSCAN_API_KEY_POLYGON=
ETHERSCAN_API_KEY_AVALANCHE=
ETHERSCAN_API_KEY_FANTOM=
ETHERSCAN_API_KEY_OPTIMISM=
ETHERSCAN_API_KEY_ARBITRUM=
ETHERSCAN_API_KEY_BASE=
ETHERSCAN_API_KEY_ZKEVM=
ETHERSCAN_API_KEY_GNOSIS=
ETHERSCAN_API_KEY_BNB=
ETHERSCAN_API_KEY_SCROLL=
ETHERESCAN_API_KEY_ZKSYNC=

# Catapulta verify uses etherscan v2 api, therefore adding a single api key is good enough
ETHERSCAN_API_KEY=

# Simulation/fork creation
TENDERLY_ACCESS_TOKEN=
TENDERLY_ACCOUNT=
TENDERLY_PROJECT=
